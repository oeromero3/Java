/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.akuavida.integracion.dao;

import edu.co.sena.akuavida.integracion.dto.*;
import edu.co.sena.akuavida.integracion.exceptions.*;

public interface UsusarioDao
{
	/** 
	 * Inserts a new row in the ususario table.
	 */
	public UsusarioPk insert(Ususario dto) throws UsusarioDaoException;

	/** 
	 * Updates a single row in the ususario table.
	 */
	public void update(UsusarioPk pk, Ususario dto) throws UsusarioDaoException;

	/** 
	 * Deletes a single row in the ususario table.
	 */
	public void delete(UsusarioPk pk) throws UsusarioDaoException;

	/** 
	 * Returns the rows from the ususario table that matches the specified primary-key value.
	 */
	public Ususario findByPrimaryKey(UsusarioPk pk) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria 'idUsusario = :idUsusario'.
	 */
	public Ususario findByPrimaryKey(String idUsusario) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria ''.
	 */
	public Ususario[] findAll() throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria 'idUsusario = :idUsusario'.
	 */
	public Ususario[] findWhereIdUsusarioEquals(String idUsusario) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria 'password = :password'.
	 */
	public Ususario[] findWherePasswordEquals(String password) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria 'rol = :rol'.
	 */
	public Ususario[] findWhereRolEquals(String rol) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the criteria 'estado = :estado'.
	 */
	public Ususario[] findWhereEstadoEquals(String estado) throws UsusarioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ususario table that match the specified arbitrary SQL statement
	 */
	public Ususario[] findByDynamicSelect(String sql, Object[] sqlParams) throws UsusarioDaoException;

	/** 
	 * Returns all rows from the ususario table that match the specified arbitrary SQL statement
	 */
	public Ususario[] findByDynamicWhere(String sql, Object[] sqlParams) throws UsusarioDaoException;

}
