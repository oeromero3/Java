/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.akuavida.integracion.dao;

import edu.co.sena.akuavida.integracion.dto.*;
import edu.co.sena.akuavida.integracion.exceptions.*;

public interface CategoriasDao
{
	/** 
	 * Inserts a new row in the categorias table.
	 */
	public CategoriasPk insert(Categorias dto) throws CategoriasDaoException;

	/** 
	 * Updates a single row in the categorias table.
	 */
	public void update(CategoriasPk pk, Categorias dto) throws CategoriasDaoException;

	/** 
	 * Deletes a single row in the categorias table.
	 */
	public void delete(CategoriasPk pk) throws CategoriasDaoException;

	/** 
	 * Returns the rows from the categorias table that matches the specified primary-key value.
	 */
	public Categorias findByPrimaryKey(CategoriasPk pk) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria 'ID_Categoria = :idCategoria'.
	 */
	public Categorias findByPrimaryKey(int idCategoria) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria ''.
	 */
	public Categorias[] findAll() throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria 'ID_Categoria = :idCategoria'.
	 */
	public Categorias[] findWhereIdCategoriaEquals(int idCategoria) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria 'Nombre = :nombre'.
	 */
	public Categorias[] findWhereNombreEquals(String nombre) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria 'Activa = :activa'.
	 */
	public Categorias[] findWhereActivaEquals(short activa) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the criteria 'Pariente = :pariente'.
	 */
	public Categorias[] findWhereParienteEquals(int pariente) throws CategoriasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the categorias table that match the specified arbitrary SQL statement
	 */
	public Categorias[] findByDynamicSelect(String sql, Object[] sqlParams) throws CategoriasDaoException;

	/** 
	 * Returns all rows from the categorias table that match the specified arbitrary SQL statement
	 */
	public Categorias[] findByDynamicWhere(String sql, Object[] sqlParams) throws CategoriasDaoException;

}
