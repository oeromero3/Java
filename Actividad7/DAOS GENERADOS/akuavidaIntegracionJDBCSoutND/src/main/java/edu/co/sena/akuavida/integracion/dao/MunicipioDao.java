/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.akuavida.integracion.dao;

import edu.co.sena.akuavida.integracion.dto.*;
import edu.co.sena.akuavida.integracion.exceptions.*;

public interface MunicipioDao
{
	/** 
	 * Inserts a new row in the municipio table.
	 */
	public MunicipioPk insert(Municipio dto) throws MunicipioDaoException;

	/** 
	 * Updates a single row in the municipio table.
	 */
	public void update(MunicipioPk pk, Municipio dto) throws MunicipioDaoException;

	/** 
	 * Deletes a single row in the municipio table.
	 */
	public void delete(MunicipioPk pk) throws MunicipioDaoException;

	/** 
	 * Returns the rows from the municipio table that matches the specified primary-key value.
	 */
	public Municipio findByPrimaryKey(MunicipioPk pk) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria 'idMunicipio = :idMunicipio'.
	 */
	public Municipio findByPrimaryKey(String idMunicipio) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria ''.
	 */
	public Municipio[] findAll() throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria 'Departamento_idDepartamento = :departamentoIddepartamento'.
	 */
	public Municipio[] findByDepartamento(String departamentoIddepartamento) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria 'idMunicipio = :idMunicipio'.
	 */
	public Municipio[] findWhereIdMunicipioEquals(String idMunicipio) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria 'Nombre_Municipio = :nombreMunicipio'.
	 */
	public Municipio[] findWhereNombreMunicipioEquals(String nombreMunicipio) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the criteria 'Departamento_idDepartamento = :departamentoIddepartamento'.
	 */
	public Municipio[] findWhereDepartamentoIddepartamentoEquals(String departamentoIddepartamento) throws MunicipioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the municipio table that match the specified arbitrary SQL statement
	 */
	public Municipio[] findByDynamicSelect(String sql, Object[] sqlParams) throws MunicipioDaoException;

	/** 
	 * Returns all rows from the municipio table that match the specified arbitrary SQL statement
	 */
	public Municipio[] findByDynamicWhere(String sql, Object[] sqlParams) throws MunicipioDaoException;

}
